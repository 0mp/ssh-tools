#!/bin/bash

  BLACK=$(tput setaf 1)
    RED=$(tput setaf 1)
  GREEN=$(tput setaf 2)
 YELLOW=$(tput setaf 3)
   BLUE=$(tput setaf 4)
MAGENTA=$(tput setaf 5)
   CYAN=$(tput setaf 6)
  WHITE=$(tput setaf 7)
   BOLD=$(tput bold   )
  RESET=$(tput sgr0   )

SSH_OPTS=(
    -o BatchMode=yes
    -o CheckHostIP=no
    -o StrictHostKeyChecking=no
    -o HashKnownHosts=no
    -o ConnectTimeout=16
)

ping_count=0
ping_interval=1
username="SSHPING"

function usage() {

cat << EOF

  Usage: $0 options [user@]host

  OPTIONS:
     -h          Show this message
     -c count    Stop after sending _count_ request packets
     -i interval Wait interval seconds between sending each request.
                 The default is to wait for 1 second between each request
     -l username Try login in with this username
                 The default is SSHPING

EOF

}

while getopts ":hc:i:l:" opt; do
  case ${opt} in
     h )
       usage
       exit 1
       ;;
     c )
       [[ $OPTARG =~ ^[0-9]+$ ]] && ping_count=$OPTARG
       ;;
     i )
       ping_interval=$OPTARG
       ;;
     l )
       username=$OPTARG
       ;;
    \? )
       echo "Invalid option: $OPTARG" 1>&2
       usage
       exit 1
      ;;
  esac
done

shift $((OPTIND - 1))

if [[ $1 == *"@"* ]]; then
  host=$( echo ${1##*@} )
  username=$( echo ${1%%@*} )
else
  host=${1}
fi

[[ -z "${host}" ]] && { echo "No host mentioned" ; usage; exit 1; }

ssh_seq=1

echo "${BOLD}SSHPING${RESET} ${YELLOW}${host}${RESET}"

while true
  do

    #
    # ping only $count times or forever if $count = 0
    #
    [[ ${ping_count} -gt 0 ]] && [[ ${ssh_seq} -gt ${ping_count} ]] && break

    status=$(ssh "${SSH_OPTS[@]}" "${username}@${host}" echo pong 2>&1 | grep -oE 'pong|denied')

    if [[ $status == pong ]] ; then
      echo "${GREEN}Pong${RESET} ${WHITE}from${RESET} ${YELLOW}${host}${RESET}${WHITE}: ssh_seq${RESET}=${RED}${ssh_seq}${RESET}"
    elif [[ $status == denied ]] ; then
      echo "${CYAN}Reply${RESET} ${WHITE}from${RESET} ${YELLOW}${host}${RESET}${WHITE}: ssh_seq${RESET}=${RED}${ssh_seq}${RESET}"
    fi

    ssh_seq=$((ssh_seq+1))
    sleep ${ping_interval}

done
